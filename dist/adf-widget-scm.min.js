!function(){"use strict";angular.module("adf.widget.scm",["adf.provider","chart.js","ngSanitize","btford.markdown"]).config(["dashboardProvider",function(t){function e(t,e){var i=null;return i=e.repository?t.getRepository(e.repository):i}var i="SCM-Manager",r={templateUrl:"{widgetsPath}/scm/src/edit/edit.html",controller:"ScmEditController",controllerAs:"vm",resolve:{repositories:["SCM",function(t){return t.getRepositories()}]}};e.$inject=["SCM","config"],t.widget("scm-commits-by-author",{title:"SCM Commits By Author",description:"Displays pie chart for commit count by author",category:i,templateUrl:"{widgetsPath}/scm/src/charts/pie-chart.html",controller:"CommitsByAuthorController",controllerAs:"vm",reload:!0,resolve:{repository:e,commitsByAuthor:["SCM","config",function(t,e){var i=null;return i=e.repository?t.getCommitsByAuthor(e.repository):i}]},edit:r}).widget("scm-commits-by-month",{title:"SCM Commits By Month",description:"Displays line chart for commit count by month",category:i,templateUrl:"{widgetsPath}/scm/src/charts/line-chart.html",controller:"CommitsByMonthController",controllerAs:"vm",reload:!0,resolve:{repository:e,commitsByMonth:["SCM","config",function(t,e){var i=null;return i=e.repository?t.getCommitsByMonth(e.repository):i}]},edit:r}).widget("scm-commits-last-commits",{title:"SCM Last Commit Chart",description:"Displays line chart for the last 50 commits",category:i,templateUrl:"{widgetsPath}/scm/src/charts/line-chart.html",controller:"LastCommitsController",controllerAs:"vm",reload:!0,resolve:{repository:e,commits:["SCM","config",function(t,e){var i=null;return i=e.repository?t.getCommits(e.repository,50):i}]},edit:r}).widget("scm-commits",{title:"SCM Commits",description:"Displays last commits",category:i,templateUrl:"{widgetsPath}/scm/src/commits/view.html",controller:"CommitsController",controllerAs:"vm",reload:!0,resolve:{repository:e,commits:["SCM","config",function(t,e){var i=null;return i=e.repository?t.getCommits(e.repository,10):i}]},edit:r}).widget("scm-activities",{title:"SCM Activities",description:"SCM Activities for all repositories",category:i,templateUrl:"{widgetsPath}/scm/src/activities/activityView.html",controller:"ActivitiesController",controllerAs:"vm",reload:!0,resolve:{activities:["SCM",function(t){return t.getActivities()}]}}).widget("scm-markdown-content",{title:"SCM Markdown Content",description:"Displays a Markdown Content Preview",category:i,templateUrl:"{widgetsPath}/scm/src/markdownPreview/view.html",controller:"MarkdownPreviewController",controllerAs:"vm",reload:!0,resolve:{repository:e,fileContent:["SCM","config",function(t,e){var i=null;return i=e.repository&&e.path?t.getFileContent(e.repository,e.path):i}]},edit:{templateUrl:"{widgetsPath}/scm/src/markdownPreview/edit.html",controller:"MarkdownPreviewEditController",controllerAs:"vm",resolve:{repositories:["SCM",function(t){return t.getRepositories()}]}}})}]),angular.module("adf.widget.scm").run(["$templateCache",function(t){t.put("{widgetsPath}/scm/src/activities/activityView.html",'<div><div ng-if=!vm.activities class="alert alert-info">There are no activities for your available repositories.</div><div ng-if="vm.status == 404 || vm.status == 500" class="alert alert-danger"><b>Error {{vm.status}}:</b> The endpoint could not be reached, this could mean that the activity plugin is not installed.</div><div ng-if=vm.activities><ul class=media-list><li class=media ng-repeat="activity in vm.activities"><div ng-if=vm.gravatarHash(activity) class=media-left><img class="media-object img-thumbnail" ng-src="https://www.gravatar.com/avatar/{{vm.gravatarHash(activity)}}?s=64&d=identicon"></div><div class=media-body><b>{{activity.repoName}}</b><p ng-bind-html=activity.changeset.description></p><small>{{activity.changeset.author.name}}, {{activity.changeset.date | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),t.put("{widgetsPath}/scm/src/charts/line-chart.html",'<div><div class="alert alert-info" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if="vm.repository.status == 404 || vm.repository.status == 500" class="alert alert-danger"><b>Error {{vm.repository.status}}</b> the endpoint could not be reached, this could mean that the selected repository does not exist or that the statistics plugin is not installed</div><div ng-if=vm.chart><canvas id=line class="chart chart-line" chart-data=vm.chart.data chart-labels=vm.chart.labels chart-series=vm.chart.series chart-options=vm.chart.options></canvas></div></div>'),t.put("{widgetsPath}/scm/src/charts/pie-chart.html",'<div><div class="alert alert-info" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if="vm.repository.status == 404 || vm.repository.status == 500" class="alert alert-danger"><b>Error {{vm.repository.status}}</b> the endpoint could not be reached, this could mean that the selected repository does not exist or that the statistics plugin is not installed</div><div ng-if=vm.chart><canvas id=pie class="chart chart-pie" chart-legend=true chart-data=vm.chart.data chart-labels=vm.chart.labels chart-options=vm.chart.options></canvas></div></div>'),t.put("{widgetsPath}/scm/src/commits/view.html",'<div><div ng-if=!config.repository class="alert alert-info">Please configure a repository</div><div ng-if="vm.repository.status == 404 || vm.repository.status == 500" class="alert alert-danger"><b>Error {{vm.repository.status}}</b> the endpoint could not be reached, this could mean that the selected repository does not exist</div><div ng-if=config.repository><ul class=media-list><li class=media ng-repeat="commit in vm.commits"><div ng-if=vm.gravatarHash(commit) class=media-left><img class="media-object img-thumbnail" ng-src="https://www.gravatar.com/avatar/{{vm.gravatarHash(commit)}}?s=64&d=identicon"></div><div class=media-body><p ng-bind-html=commit.description></p><small>{{commit.author.name}}, {{commit.date | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>'),t.put("{widgetsPath}/scm/src/edit/edit.html","<form role=form><div class=form-group><label for=repository>Repository</label><select name=repository id=repository class=form-control ng-model=config.repository><option ng-repeat=\"repository in vm.repositories | orderBy: 'name'\" value={{repository.id}}>{{repository.name}}</option></select></div></form>"),t.put("{widgetsPath}/scm/src/markdownPreview/edit.html","<form role=form><div class=form-group><p><label for=repository>Repository</label><select name=repository id=repository class=form-control ng-model=config.repository ng-init=vm.getBranchesByRepositoryId(config.repository) ng-change=vm.getBranchesByRepositoryId(config.repository)><option ng-repeat=\"repository in vm.repositories | orderBy: 'name'\" value={{repository.id}}>{{repository.name}}</option></select></p><p ng-if=vm.branches><label for=branch>Branch</label><select name=branch id=branch class=form-control ng-model=config.branch><option ng-repeat=\"branch in vm.branches| orderBy: 'name'\" value={{branch.id}}>{{branch.name}}</option></select></p><label for=path>Path to Markdown File</label> <input type=text class=form-control id=path ng-model=config.path></div></form>"),t.put("{widgetsPath}/scm/src/markdownPreview/view.html",'<style>\n  div.markdownContent{\n    overflow: auto;\n    width: 100%;\n  }\n</style><div class="alert alert-info" ng-if=!vm.fileContent>Please configure a specific file</div><div ng-if=vm.fileContent btf-markdown=vm.fileContent class=markdownContent></div><div class="alert alert-danger" ng-if="vm.fileContent.status == 500 || vm.fileContent.status == 404"><b>Error {{vm.fileContent.status}}</b> Markdown-File not found. Please check your configuration and try again.</div>')}]),angular.module("adf.widget.scm").controller("MarkdownPreviewEditController",["repositories","SCM",function(t,e){var i=this;i.repositories=t,i.getBranchesByRepositoryId=function(t){t&&e.getBranchesByRepositoryId(t).then(function(t){400==t.status?i.branches=null:i.branches=t.branch})}}]),angular.module("adf.widget.scm").controller("MarkdownPreviewController",["repository","fileContent",function(t,e){this.repository=t,this.fileContent=e}]),angular.module("adf.widget.scm").controller("ScmEditController",["repositories",function(t){this.repositories=t}]),angular.module("adf.widget.scm").controller("CommitsController",["$sce","config","repository","commits","SCM",function(e,t,i,r,o){var s=this;s.repository=i,angular.forEach(r,function(t){t.description=e.trustAsHtml(t.description)}),s.commits=r,s.gravatarHash=function(t){return o.getGravatarHash(t.properties)}}]),angular.module("adf.widget.scm").controller("LastCommitsController",["$filter","config","repository","commits",function(t,e,i,r){var o,s,a;(this.repository=i)&&r&&(this.chart=(s={labels:[],data:[o=[]],series:["Commits"],class:"chart-line",options:{scales:{yAxes:[{id:"y-axis-1",display:!0,position:"left",ticks:{fixedStepSize:1},scaleLabel:{display:!0,labelString:"Commits"}}]},legend:{display:!0,position:"bottom"},responsive:!0}},a={},angular.forEach(r,function(t){var e=new Date(t.date),t=e.getUTCFullYear()+"-"+(e.getUTCMonth()+1)+"-"+e.getUTCDate(),e=a[t];e?e.count+=1:a[t]={date:t,count:1}}),angular.forEach(a,function(t){s.labels.push(t.date),o.push(t.count)}),s.labels.reverse(),o.reverse(),s))}]),angular.module("adf.widget.scm").controller("CommitsByMonthController",["config","repository","commitsByMonth",function(t,e,i){var r,o;this.repository=e,i&&(this.chart=(o={labels:[],data:[r=[]],series:["Commits"],class:"chart-line",options:{scales:{yAxes:[{id:"y-axis-1",display:!0,position:"left",ticks:{fixedStepSize:1},scaleLabel:{display:!0,labelString:"Commits"}}]},legend:{display:!0,position:"bottom"},responsive:!0}},angular.forEach(i.month,function(t){o.labels.push(t.value),r.push(t.count)}),o))}]),angular.module("adf.widget.scm").controller("CommitsByAuthorController",["config","repository","commitsByAuthor",function(t,e,o){(this.repository=e)&&o&&(this.chart=function(){var i={};angular.forEach(o.author,function(t){var e=t.value;i[e]=t.count});var r={labels:[],data:[],series:["Commits"],class:"chart-pie",options:{legend:{display:!0,position:"bottom"},responsive:!0}};return angular.forEach(i,function(t,e){r.labels.push(e),r.data.push(t)}),r}())}]),angular.module("adf.widget.scm").controller("ActivitiesController",["$sce","activities","SCM",function(e,t,i){this.status=t.status,angular.forEach(t.activities,function(t){t.changeset.description=e.trustAsHtml(t.changeset.description),t.repoName=t["repository-name"]}),t.activities&&(this.activities=t.activities.slice(0,15)),this.gravatarHash=function(t){return i.getGravatarHash(t.changeset.properties)}}]);angular.module("adf.widget.scm").config(["$httpProvider",function(t){t.defaults.headers.common.Authorization="Basic "}]).factory("SCM",["scmEndpoint","$http",function(e,i){function r(t){return i.get(e+t).then(function(t){if(200==t.status)return t.data},function(t){return t})}return{getRepositories:function(){return r("repositories.json")},getRepository:function(t){return r("repositories/"+t+".json")},getCommitsByAuthor:function(t){return r("plugins/statistic/"+t+"/commits-per-author.json")},getCommitsByMonth:function(t){return r("plugins/statistic/"+t+"/commits-per-month.json")},getCommits:function(t,e){return r("repositories/"+t+"/changesets.json?limit="+e).then(function(t){return t.changesets})},getActivities:function(){return r("activity.json")},getFileContent:function(t,e){return r("repositories/"+t+"/content?path="+e)},getBranchesByRepositoryId:function(t){return r("repositories/"+t+"/branches")},getGravatarHash:function(t){var e;if(t)for(var i=0;i<t.length;i++)if("gravatar-hash"===t[0].key){e=t[0].value;break}return e}}}])}(window);
//# sourceMappingURL=adf-widget-scm.min.js.map

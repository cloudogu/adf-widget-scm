{"version":3,"sources":["scm.js","adf-widget-scm.min.js","adf-widget-scm.tpl.js","markdownPreview/markdownPreviewEdit.js","markdownPreview/markdownPreview.js","edit/simpleEditController.js","commits/commits.js","charts/commitsLastCommits.js","charts/commitsByMonth.js","charts/commitsByAuthor.js","activities/activities.js","service.js","adf-widget-scm.js"],"names":["window","undefined","angular","module","config","dashboardProvider","category","edit","templateUrl","controller","controllerAs","resolve","repositories","SCM","getRepositories","resolveRepository","result","repository","getRepository","$inject","widget","title","description","reload","commitsByAuthor","getCommitsByAuthor","commitsByMonth","getCommitsByMonth","commits","getCommits","activities","getActivities","fileContent","path","getFileContent","run","$templateCache","put","vm","this","getBranchesByRepositoryId","repositoryId","then","status","branches","branch","$sce","forEach","commit","trustAsHtml","gravatarHash","getGravatarHash","properties","$filter","createChart","options","scales","yAxes","id","display","position","ticks","fixedStepSize","scaleLabel","labelString","legend","responsive","chartData","chart","labels","data","series","class","date","Date","key","getUTCFullYear","getUTCMonth","getUTCDate","entry","count","push","reverse","month","value","author","activity","changeset","repoName","slice","factory","scmEndpoint","$http","request","url","get","response","error","limit","changesets","filePath","hash","i","length"],"mappings":"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","file":"adf-widget-scm.min.js","sourcesContent":["/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm', ['adf.provider', 'chart.js', 'ngSanitize', 'btford.markdown'])\n  .config(function (dashboardProvider) {\n\n    // category for widget add dialog\n    var category = 'SCM-Manager';\n\n    var edit = {\n      templateUrl: '{widgetsPath}/scm/src/edit/edit.html',\n      controller: 'ScmEditController',\n      controllerAs: 'vm',\n      resolve: {\n        /** @ngInject **/\n        repositories: function (SCM) {\n          return SCM.getRepositories();\n        }\n      }\n    };\n\n    var resolveRepository = function (SCM, config) {\n      var result = null;\n      if (config.repository) {\n        result = SCM.getRepository(config.repository);\n      }\n      return result;\n    };\n\n    dashboardProvider\n      .widget('scm-commits-by-author', {\n        title: 'SCM Commits By Author',\n        description: 'Displays pie chart for commit count by author',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/pie-chart.html',\n        controller: 'CommitsByAuthorController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByAuthor: function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommitsByAuthor(config.repository);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits-by-month', {\n        title: 'SCM Commits By Month',\n        description: 'Displays line chart for commit count by month',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/line-chart.html',\n        controller: 'CommitsByMonthController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByMonth: function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommitsByMonth(config.repository);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits-last-commits', {\n        title: 'SCM Last Commit Chart',\n        description: 'Displays line chart for the last 50 commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/line-chart.html',\n        controller: 'LastCommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommits(config.repository, 50);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits', {\n        title: 'SCM Commits',\n        description: 'Displays last commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/commits/view.html',\n        controller: 'CommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommits(config.repository, 10);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n       .widget('scm-activities', {\n        title: 'SCM Activities',\n        description: 'SCM Activities for all repositories',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/activities/activityView.html',\n        controller: 'ActivitiesController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          activities: function(SCM){\n            var result = null;\n            result = SCM.getActivities();\n            return result;\n         }\n     }})\n      .widget('scm-markdown-content', {\n        title: 'SCM Markdown Content',\n        description: 'Displays a Markdown Content Preview',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/markdownPreview/view.html',\n        controller: 'MarkdownPreviewController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          fileContent: function (SCM, config) {\n            var result = null;\n            if (config.repository && config.path) {\n              result = SCM.getFileContent(config.repository, config.path);\n            }\n            return result;\n          }\n        },\n        edit: {\n          templateUrl: '{widgetsPath}/scm/src/markdownPreview/edit.html',\n          controller: 'MarkdownPreviewEditController',\n          controllerAs: 'vm',\n          resolve: {\n            /** @ngInject **/\n            repositories: function (SCM) {\n              return SCM.getRepositories();\n            }\n          }\n        }\n      });\n  });\n","(function(window, undefined) {'use strict';\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm', ['adf.provider', 'chart.js', 'ngSanitize', 'btford.markdown'])\n  .config([\"dashboardProvider\", function (dashboardProvider) {\n\n    // category for widget add dialog\n    var category = 'SCM-Manager';\n\n    var edit = {\n      templateUrl: '{widgetsPath}/scm/src/edit/edit.html',\n      controller: 'ScmEditController',\n      controllerAs: 'vm',\n      resolve: {\n        /** @ngInject **/\n        repositories: [\"SCM\", function (SCM) {\n          return SCM.getRepositories();\n        }]\n      }\n    };\n\n    var resolveRepository = function (SCM, config) {\n      var result = null;\n      if (config.repository) {\n        result = SCM.getRepository(config.repository);\n      }\n      return result;\n    };\n    resolveRepository.$inject = [\"SCM\", \"config\"];\n\n    dashboardProvider\n      .widget('scm-commits-by-author', {\n        title: 'SCM Commits By Author',\n        description: 'Displays pie chart for commit count by author',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/pie-chart.html',\n        controller: 'CommitsByAuthorController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByAuthor: [\"SCM\", \"config\", function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommitsByAuthor(config.repository);\n            }\n            return result;\n          }]\n        },\n        edit: edit\n      })\n      .widget('scm-commits-by-month', {\n        title: 'SCM Commits By Month',\n        description: 'Displays line chart for commit count by month',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/line-chart.html',\n        controller: 'CommitsByMonthController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByMonth: [\"SCM\", \"config\", function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommitsByMonth(config.repository);\n            }\n            return result;\n          }]\n        },\n        edit: edit\n      })\n      .widget('scm-commits-last-commits', {\n        title: 'SCM Last Commit Chart',\n        description: 'Displays line chart for the last 50 commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/line-chart.html',\n        controller: 'LastCommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: [\"SCM\", \"config\", function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommits(config.repository, 50);\n            }\n            return result;\n          }]\n        },\n        edit: edit\n      })\n      .widget('scm-commits', {\n        title: 'SCM Commits',\n        description: 'Displays last commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/commits/view.html',\n        controller: 'CommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: [\"SCM\", \"config\", function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommits(config.repository, 10);\n            }\n            return result;\n          }]\n        },\n        edit: edit\n      })\n       .widget('scm-activities', {\n        title: 'SCM Activities',\n        description: 'SCM Activities for all repositories',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/activities/activityView.html',\n        controller: 'ActivitiesController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          activities: [\"SCM\", function(SCM){\n            var result = null;\n            result = SCM.getActivities();\n            return result;\n         }]\n     }})\n      .widget('scm-markdown-content', {\n        title: 'SCM Markdown Content',\n        description: 'Displays a Markdown Content Preview',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/markdownPreview/view.html',\n        controller: 'MarkdownPreviewController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          fileContent: [\"SCM\", \"config\", function (SCM, config) {\n            var result = null;\n            if (config.repository && config.path) {\n              result = SCM.getFileContent(config.repository, config.path);\n            }\n            return result;\n          }]\n        },\n        edit: {\n          templateUrl: '{widgetsPath}/scm/src/markdownPreview/edit.html',\n          controller: 'MarkdownPreviewEditController',\n          controllerAs: 'vm',\n          resolve: {\n            /** @ngInject **/\n            repositories: [\"SCM\", function (SCM) {\n              return SCM.getRepositories();\n            }]\n          }\n        }\n      });\n  }]);\n\nangular.module(\"adf.widget.scm\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"{widgetsPath}/scm/src/activities/activityView.html\",\"<div><div ng-if=!vm.activities class=\\\"alert alert-info\\\">There are no activities for your available repositories.</div><div ng-if=\\\"vm.status == 404 || vm.status == 500\\\" class=\\\"alert alert-danger\\\"><b>Error {{vm.status}}:</b> The endpoint could not be reached, this could mean that the activity plugin is not installed.</div><div ng-if=vm.activities><ul class=media-list><li class=media ng-repeat=\\\"activity in vm.activities\\\"><div ng-if=vm.gravatarHash(activity) class=media-left><img class=\\\"media-object img-thumbnail\\\" ng-src=\\\"https://www.gravatar.com/avatar/{{vm.gravatarHash(activity)}}?s=64&d=identicon\\\"></div><div class=media-body><b>{{activity.repoName}}</b><p ng-bind-html=activity.changeset.description></p><small>{{activity.changeset.author.name}}, {{activity.changeset.date | date: \\'yyyy-MM-dd HH:mm\\'}}</small></div></li></ul></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/charts/line-chart.html\",\"<div><div class=\\\"alert alert-info\\\" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=\\\"vm.repository.status == 404 || vm.repository.status == 500\\\" class=\\\"alert alert-danger\\\"><b>Error {{vm.repository.status}}</b> the endpoint could not be reached, this could mean that the selected repository does not exist or that the statistics plugin is not installed</div><div ng-if=vm.chart><canvas id=line class=\\\"chart chart-line\\\" chart-data=vm.chart.data chart-labels=vm.chart.labels chart-series=vm.chart.series chart-options=vm.chart.options></canvas></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/charts/pie-chart.html\",\"<div><div class=\\\"alert alert-info\\\" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=\\\"vm.repository.status == 404 || vm.repository.status == 500\\\" class=\\\"alert alert-danger\\\"><b>Error {{vm.repository.status}}</b> the endpoint could not be reached, this could mean that the selected repository does not exist or that the statistics plugin is not installed</div><div ng-if=vm.chart><canvas id=pie class=\\\"chart chart-pie\\\" chart-legend=true chart-data=vm.chart.data chart-labels=vm.chart.labels chart-options=vm.chart.options></canvas></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/commits/view.html\",\"<div><div ng-if=!config.repository class=\\\"alert alert-info\\\">Please configure a repository</div><div ng-if=\\\"vm.repository.status == 404 || vm.repository.status == 500\\\" class=\\\"alert alert-danger\\\"><b>Error {{vm.repository.status}}</b> the endpoint could not be reached, this could mean that the selected repository does not exist</div><div ng-if=config.repository><ul class=media-list><li class=media ng-repeat=\\\"commit in vm.commits\\\"><div ng-if=vm.gravatarHash(commit) class=media-left><img class=\\\"media-object img-thumbnail\\\" ng-src=\\\"https://www.gravatar.com/avatar/{{vm.gravatarHash(commit)}}?s=64&d=identicon\\\"></div><div class=media-body><p ng-bind-html=commit.description></p><small>{{commit.author.name}}, {{commit.date | date: \\'yyyy-MM-dd HH:mm\\'}}</small></div></li></ul></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/edit/edit.html\",\"<form role=form><div class=form-group><label for=repository>Repository</label><select name=repository id=repository class=form-control ng-model=config.repository><option ng-repeat=\\\"repository in vm.repositories | orderBy: \\'name\\'\\\" value={{repository.id}}>{{repository.name}}</option></select></div></form>\");\n$templateCache.put(\"{widgetsPath}/scm/src/markdownPreview/edit.html\",\"<form role=form><div class=form-group><p><label for=repository>Repository</label><select name=repository id=repository class=form-control ng-model=config.repository ng-init=vm.getBranchesByRepositoryId(config.repository) ng-change=vm.getBranchesByRepositoryId(config.repository)><option ng-repeat=\\\"repository in vm.repositories | orderBy: \\'name\\'\\\" value={{repository.id}}>{{repository.name}}</option></select></p><p ng-if=vm.branches><label for=branch>Branch</label><select name=branch id=branch class=form-control ng-model=config.branch><option ng-repeat=\\\"branch in vm.branches| orderBy: \\'name\\'\\\" value={{branch.id}}>{{branch.name}}</option></select></p><label for=path>Path to Markdown File</label> <input type=text class=form-control id=path ng-model=config.path></div></form>\");\n$templateCache.put(\"{widgetsPath}/scm/src/markdownPreview/view.html\",\"<style>\\n  div.markdownContent{\\n    overflow: auto;\\n    width: 100%;\\n  }\\n</style><div class=\\\"alert alert-info\\\" ng-if=!vm.fileContent>Please configure a specific file</div><div ng-if=vm.fileContent btf-markdown=vm.fileContent class=markdownContent></div><div class=\\\"alert alert-danger\\\" ng-if=\\\"vm.fileContent.status == 500 || vm.fileContent.status == 404\\\"><b>Error {{vm.fileContent.status}}</b> Markdown-File not found. Please check your configuration and try again.</div>\");}]);\n\n\nangular.module('adf.widget.scm')\n  .controller('MarkdownPreviewEditController', [\"repositories\", \"SCM\", function (repositories, SCM) {\n    var vm = this;\n    vm.repositories = repositories;\n\n    vm.getBranchesByRepositoryId = function (repositoryId) {\n      if (repositoryId) {\n        SCM.getBranchesByRepositoryId(repositoryId).then(function (result) {\n          // catch repositories without branch support\n          if (result.status == 400)  {\n            vm.branches = null;\n          }else{\n            vm.branches = result.branch;\n          }\n        });\n      }\n    };\n\n  }]);\n\n\n\nangular.module('adf.widget.scm')\n  .controller('MarkdownPreviewController', [\"repository\", \"fileContent\", function (repository, fileContent) {\n    var vm = this;\n    vm.repository = repository;\n    vm.fileContent = fileContent;\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('ScmEditController', [\"repositories\", function(repositories){\n    var vm = this;\n\n    vm.repositories = repositories;\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n        .controller('CommitsController', [\"$sce\", \"config\", \"repository\", \"commits\", \"SCM\", function ($sce, config, repository, commits, SCM) {\n            var vm = this;\n\n            vm.repository = repository;\n\n            // allow html descriptions\n            angular.forEach(commits, function (commit) {\n                commit.description = $sce.trustAsHtml(commit.description);\n            });\n            vm.commits = commits;\n\n            vm.gravatarHash = function (commit) {\n                return SCM.getGravatarHash(commit.properties);\n            };\n        }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('LastCommitsController', [\"$filter\", \"config\", \"repository\", \"commits\", function ($filter, config, repository, commits) {\n    var vm = this;\n    vm.repository = repository;\n\n    if (repository && commits) {\n      vm.chart = createChart();\n    }\n\n    function createChart() {\n      var options = {\n        scales: {\n          yAxes: [\n            {\n              id: 'y-axis-1',\n              display: true,\n              position: 'left',\n              ticks: {fixedStepSize: 1},\n              scaleLabel: {\n                display: true,\n                labelString: 'Commits'\n              }\n            }\n          ]\n        },\n        legend: {\n          display: true,\n          position: \"bottom\"\n        },\n        responsive: true\n      };\n      var chartData = [];\n      var chart = {\n        labels: [],\n        data: [chartData],\n        series: [\"Commits\"],\n        class: \"chart-line\",\n        options: options\n      };\n\n      var data = {};\n      angular.forEach(commits, function (commit) {\n        var date = new Date(commit.date);\n        var key = date.getUTCFullYear() + '-' + (date.getUTCMonth() + 1) + '-' + date.getUTCDate();\n        var entry = data[key];\n        if (entry) {\n          entry.count += 1;\n        } else {\n          data[key] = {\n            date: key,\n            count: 1\n          };\n        }\n      });\n\n      angular.forEach(data, function (entry) {\n        chart.labels.push(entry.date);\n        chartData.push(entry.count);\n      });\n\n      chart.labels.reverse();\n      chartData.reverse();\n\n      return chart;\n    }\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByMonthController', [\"config\", \"repository\", \"commitsByMonth\", function (config, repository, commitsByMonth) {\n    var vm = this;\n    vm.repository = repository;\n\n    if (commitsByMonth) {\n      vm.chart = createChart();\n    }\n\n    function createChart() {\n      var chartData = [];\n      var options = {\n        scales: {\n          yAxes: [\n            {\n              id: 'y-axis-1',\n              display: true,\n              position: 'left',\n              ticks: {fixedStepSize: 1},\n              scaleLabel: {\n                display: true,\n                labelString: 'Commits'\n              }\n            }\n          ]\n        },\n        legend: {\n          display: true,\n          position: \"bottom\"\n        },\n        responsive: true\n      };\n      var chart = {\n        labels: [],\n        data: [chartData],\n        series: [\"Commits\"],\n        class: \"chart-line\",\n        options: options\n      };\n\n      angular.forEach(commitsByMonth.month, function (month) {\n        chart.labels.push(month.value);\n        chartData.push(month.count);\n      });\n\n      return chart;\n    }\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByAuthorController', [\"config\", \"repository\", \"commitsByAuthor\", function (config, repository, commitsByAuthor) {\n    var vm = this;\n    vm.repository = repository;\n\n    if (repository && commitsByAuthor) {\n      vm.chart = createChart();\n    }\n\n    function createChart() {\n      var data = {};\n\n      angular.forEach(commitsByAuthor.author, function (entry) {\n        var author = entry.value;\n        data[author] = entry.count;\n      });\n\n      var options = {\n        legend: {\n          display: true,\n          position: \"bottom\"\n        },\n        responsive: true\n      };\n\n      var chart = {\n        labels: [],\n        data: [],\n        series: [\"Commits\"],\n        class: \"chart-pie\",\n        options: options\n      };\n\n      angular.forEach(data, function (count, author) {\n        chart.labels.push(author);\n        chart.data.push(count);\n      });\n\n      return chart;\n    }\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n        .controller('ActivitiesController', [\"$sce\", \"activities\", \"SCM\", function ($sce, activities, SCM) {\n            var vm = this;\n            vm.status = activities.status;\n\n            // allow html descriptions\n            angular.forEach(activities.activities, function (activity) {\n                activity.changeset.description = $sce.trustAsHtml(activity.changeset.description);\n                activity.repoName = activity[\"repository-name\"];\n            });\n\n            // handling and displaying only 15 activities\n            if (activities.activities) {\n                vm.activities = activities.activities.slice(0, 15);\n            }\n\n            vm.gravatarHash = function (activity) {\n                return SCM.getGravatarHash(activity.changeset.properties);\n            };\n        }]);\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .factory('SCM', [\"scmEndpoint\", \"$http\", function (scmEndpoint, $http) {\n\n    function request(url) {\n      return $http.get(scmEndpoint + url).then(function (response) {\n        if (response.status == 200) {\n          return response.data;\n        }\n      }, function (error) {\n        return error;\n      });\n    }\n\n    function getRepositories() {\n      return request('repositories.json');\n    }\n\n    function getRepository(id) {\n      return request('repositories/' + id + '.json');\n    }\n\n    function getCommitsByAuthor(id) {\n      return request('plugins/statistic/' + id + '/commits-per-author.json');\n    }\n\n    function getCommitsByMonth(id) {\n      return request('plugins/statistic/' + id + '/commits-per-month.json');\n    }\n\n    function getCommits(id, limit) {\n      return request('repositories/' + id + '/changesets.json?limit=' + limit).then(function (data) {\n        return data.changesets;\n      });\n    }\n\n\n    function getActivities(){\n      return request('activity.json');\n  }\n\n    function getFileContent(id, filePath) {\n      return request('repositories/' + id + '/content?path=' + filePath);\n    }\n\n    function getBranchesByRepositoryId(id) {\n      return request('repositories/' + id + '/branches');\n    }\n\n    function getGravatarHash(properties) {\n        var hash;\n      if (properties){\n        for (var i=0; i<properties.length; i++){\n          if (properties[0].key === 'gravatar-hash'){\n               hash = properties[0].value;\n            break;\n          }\n        }\n      }\n      return hash;\n    }\n    \n    return {\n      getRepositories: getRepositories,\n      getRepository: getRepository,\n      getCommitsByAuthor: getCommitsByAuthor,\n      getCommitsByMonth: getCommitsByMonth,\n      getCommits: getCommits,\n      getActivities: getActivities,\n      getFileContent: getFileContent,\n      getBranchesByRepositoryId: getBranchesByRepositoryId,\n      getGravatarHash: getGravatarHash\n    };\n  }]);\n})(window);",null,"'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('MarkdownPreviewEditController', function (repositories, SCM) {\n    var vm = this;\n    vm.repositories = repositories;\n\n    vm.getBranchesByRepositoryId = function (repositoryId) {\n      if (repositoryId) {\n        SCM.getBranchesByRepositoryId(repositoryId).then(function (result) {\n          // catch repositories without branch support\n          if (result.status == 400)  {\n            vm.branches = null;\n          }else{\n            vm.branches = result.branch;\n          }\n        });\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('MarkdownPreviewController', function (repository, fileContent) {\n    var vm = this;\n    vm.repository = repository;\n    vm.fileContent = fileContent;\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('ScmEditController', function(repositories){\n    var vm = this;\n\n    vm.repositories = repositories;\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n        .controller('CommitsController', function ($sce, config, repository, commits, SCM) {\n            var vm = this;\n\n            vm.repository = repository;\n\n            // allow html descriptions\n            angular.forEach(commits, function (commit) {\n                commit.description = $sce.trustAsHtml(commit.description);\n            });\n            vm.commits = commits;\n\n            vm.gravatarHash = function (commit) {\n                return SCM.getGravatarHash(commit.properties);\n            };\n        });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('LastCommitsController', function ($filter, config, repository, commits) {\n    var vm = this;\n    vm.repository = repository;\n\n    if (repository && commits) {\n      vm.chart = createChart();\n    }\n\n    function createChart() {\n      var options = {\n        scales: {\n          yAxes: [\n            {\n              id: 'y-axis-1',\n              display: true,\n              position: 'left',\n              ticks: {fixedStepSize: 1},\n              scaleLabel: {\n                display: true,\n                labelString: 'Commits'\n              }\n            }\n          ]\n        },\n        legend: {\n          display: true,\n          position: \"bottom\"\n        },\n        responsive: true\n      };\n      var chartData = [];\n      var chart = {\n        labels: [],\n        data: [chartData],\n        series: [\"Commits\"],\n        class: \"chart-line\",\n        options: options\n      };\n\n      var data = {};\n      angular.forEach(commits, function (commit) {\n        var date = new Date(commit.date);\n        var key = date.getUTCFullYear() + '-' + (date.getUTCMonth() + 1) + '-' + date.getUTCDate();\n        var entry = data[key];\n        if (entry) {\n          entry.count += 1;\n        } else {\n          data[key] = {\n            date: key,\n            count: 1\n          };\n        }\n      });\n\n      angular.forEach(data, function (entry) {\n        chart.labels.push(entry.date);\n        chartData.push(entry.count);\n      });\n\n      chart.labels.reverse();\n      chartData.reverse();\n\n      return chart;\n    }\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByMonthController', function (config, repository, commitsByMonth) {\n    var vm = this;\n    vm.repository = repository;\n\n    if (commitsByMonth) {\n      vm.chart = createChart();\n    }\n\n    function createChart() {\n      var chartData = [];\n      var options = {\n        scales: {\n          yAxes: [\n            {\n              id: 'y-axis-1',\n              display: true,\n              position: 'left',\n              ticks: {fixedStepSize: 1},\n              scaleLabel: {\n                display: true,\n                labelString: 'Commits'\n              }\n            }\n          ]\n        },\n        legend: {\n          display: true,\n          position: \"bottom\"\n        },\n        responsive: true\n      };\n      var chart = {\n        labels: [],\n        data: [chartData],\n        series: [\"Commits\"],\n        class: \"chart-line\",\n        options: options\n      };\n\n      angular.forEach(commitsByMonth.month, function (month) {\n        chart.labels.push(month.value);\n        chartData.push(month.count);\n      });\n\n      return chart;\n    }\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByAuthorController', function (config, repository, commitsByAuthor) {\n    var vm = this;\n    vm.repository = repository;\n\n    if (repository && commitsByAuthor) {\n      vm.chart = createChart();\n    }\n\n    function createChart() {\n      var data = {};\n\n      angular.forEach(commitsByAuthor.author, function (entry) {\n        var author = entry.value;\n        data[author] = entry.count;\n      });\n\n      var options = {\n        legend: {\n          display: true,\n          position: \"bottom\"\n        },\n        responsive: true\n      };\n\n      var chart = {\n        labels: [],\n        data: [],\n        series: [\"Commits\"],\n        class: \"chart-pie\",\n        options: options\n      };\n\n      angular.forEach(data, function (count, author) {\n        chart.labels.push(author);\n        chart.data.push(count);\n      });\n\n      return chart;\n    }\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n        .controller('ActivitiesController', function ($sce, activities, SCM) {\n            var vm = this;\n            vm.status = activities.status;\n\n            // allow html descriptions\n            angular.forEach(activities.activities, function (activity) {\n                activity.changeset.description = $sce.trustAsHtml(activity.changeset.description);\n                activity.repoName = activity[\"repository-name\"];\n            });\n\n            // handling and displaying only 15 activities\n            if (activities.activities) {\n                vm.activities = activities.activities.slice(0, 15);\n            }\n\n            vm.gravatarHash = function (activity) {\n                return SCM.getGravatarHash(activity.changeset.properties);\n            };\n        });","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .factory('SCM', function (scmEndpoint, $http) {\n\n    function request(url) {\n      return $http.get(scmEndpoint + url).then(function (response) {\n        if (response.status == 200) {\n          return response.data;\n        }\n      }, function (error) {\n        return error;\n      });\n    }\n\n    function getRepositories() {\n      return request('repositories.json');\n    }\n\n    function getRepository(id) {\n      return request('repositories/' + id + '.json');\n    }\n\n    function getCommitsByAuthor(id) {\n      return request('plugins/statistic/' + id + '/commits-per-author.json');\n    }\n\n    function getCommitsByMonth(id) {\n      return request('plugins/statistic/' + id + '/commits-per-month.json');\n    }\n\n    function getCommits(id, limit) {\n      return request('repositories/' + id + '/changesets.json?limit=' + limit).then(function (data) {\n        return data.changesets;\n      });\n    }\n\n\n    function getActivities(){\n      return request('activity.json');\n  }\n\n    function getFileContent(id, filePath) {\n      return request('repositories/' + id + '/content?path=' + filePath);\n    }\n\n    function getBranchesByRepositoryId(id) {\n      return request('repositories/' + id + '/branches');\n    }\n\n    function getGravatarHash(properties) {\n        var hash;\n      if (properties){\n        for (var i=0; i<properties.length; i++){\n          if (properties[0].key === 'gravatar-hash'){\n               hash = properties[0].value;\n            break;\n          }\n        }\n      }\n      return hash;\n    }\n    \n    return {\n      getRepositories: getRepositories,\n      getRepository: getRepository,\n      getCommitsByAuthor: getCommitsByAuthor,\n      getCommitsByMonth: getCommitsByMonth,\n      getCommits: getCommits,\n      getActivities: getActivities,\n      getFileContent: getFileContent,\n      getBranchesByRepositoryId: getBranchesByRepositoryId,\n      getGravatarHash: getGravatarHash\n    };\n  });\n","(function(window, undefined) {'use strict';\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm', ['adf.provider', 'chart.js', 'ngSanitize', 'btford.markdown'])\n  .config(function (dashboardProvider) {\n\n    // category for widget add dialog\n    var category = 'SCM-Manager';\n\n    var edit = {\n      templateUrl: '{widgetsPath}/scm/src/edit/edit.html',\n      controller: 'ScmEditController',\n      controllerAs: 'vm',\n      resolve: {\n        /** @ngInject **/\n        repositories: function (SCM) {\n          return SCM.getRepositories();\n        }\n      }\n    };\n\n    var resolveRepository = function (SCM, config) {\n      var result = null;\n      if (config.repository) {\n        result = SCM.getRepository(config.repository);\n      }\n      return result;\n    };\n\n    dashboardProvider\n      .widget('scm-commits-by-author', {\n        title: 'SCM Commits By Author',\n        description: 'Displays pie chart for commit count by author',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/pie-chart.html',\n        controller: 'CommitsByAuthorController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByAuthor: function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommitsByAuthor(config.repository);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits-by-month', {\n        title: 'SCM Commits By Month',\n        description: 'Displays line chart for commit count by month',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/line-chart.html',\n        controller: 'CommitsByMonthController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByMonth: function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommitsByMonth(config.repository);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits-last-commits', {\n        title: 'SCM Last Commit Chart',\n        description: 'Displays line chart for the last 50 commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/line-chart.html',\n        controller: 'LastCommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommits(config.repository, 50);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits', {\n        title: 'SCM Commits',\n        description: 'Displays last commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/commits/view.html',\n        controller: 'CommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: function (SCM, config) {\n            var result = null;\n            if (config.repository) {\n              result = SCM.getCommits(config.repository, 10);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n       .widget('scm-activities', {\n        title: 'SCM Activities',\n        description: 'SCM Activities for all repositories',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/activities/activityView.html',\n        controller: 'ActivitiesController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          activities: function(SCM){\n            var result = null;\n            result = SCM.getActivities();\n            return result;\n         }\n     }})\n      .widget('scm-markdown-content', {\n        title: 'SCM Markdown Content',\n        description: 'Displays a Markdown Content Preview',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/markdownPreview/view.html',\n        controller: 'MarkdownPreviewController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          fileContent: function (SCM, config) {\n            var result = null;\n            if (config.repository && config.path) {\n              result = SCM.getFileContent(config.repository, config.path);\n            }\n            return result;\n          }\n        },\n        edit: {\n          templateUrl: '{widgetsPath}/scm/src/markdownPreview/edit.html',\n          controller: 'MarkdownPreviewEditController',\n          controllerAs: 'vm',\n          resolve: {\n            /** @ngInject **/\n            repositories: function (SCM) {\n              return SCM.getRepositories();\n            }\n          }\n        }\n      });\n  });\n\nangular.module(\"adf.widget.scm\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"{widgetsPath}/scm/src/activities/activityView.html\",\"<div><div ng-if=!vm.activities class=\\\"alert alert-info\\\">There are no activities for your available repositories.</div><div ng-if=\\\"vm.status == 404 || vm.status == 500\\\" class=\\\"alert alert-danger\\\"><b>Error {{vm.status}}:</b> The endpoint could not be reached, this could mean that the activity plugin is not installed.</div><div ng-if=vm.activities><ul class=media-list><li class=media ng-repeat=\\\"activity in vm.activities\\\"><div ng-if=vm.gravatarHash(activity) class=media-left><img class=\\\"media-object img-thumbnail\\\" ng-src=\\\"https://www.gravatar.com/avatar/{{vm.gravatarHash(activity)}}?s=64&d=identicon\\\"></div><div class=media-body><b>{{activity.repoName}}</b><p ng-bind-html=activity.changeset.description></p><small>{{activity.changeset.author.name}}, {{activity.changeset.date | date: \\'yyyy-MM-dd HH:mm\\'}}</small></div></li></ul></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/charts/line-chart.html\",\"<div><div class=\\\"alert alert-info\\\" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=\\\"vm.repository.status == 404 || vm.repository.status == 500\\\" class=\\\"alert alert-danger\\\"><b>Error {{vm.repository.status}}</b> the endpoint could not be reached, this could mean that the selected repository does not exist or that the statistics plugin is not installed</div><div ng-if=vm.chart><canvas id=line class=\\\"chart chart-line\\\" chart-data=vm.chart.data chart-labels=vm.chart.labels chart-series=vm.chart.series chart-options=vm.chart.options></canvas></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/charts/pie-chart.html\",\"<div><div class=\\\"alert alert-info\\\" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=\\\"vm.repository.status == 404 || vm.repository.status == 500\\\" class=\\\"alert alert-danger\\\"><b>Error {{vm.repository.status}}</b> the endpoint could not be reached, this could mean that the selected repository does not exist or that the statistics plugin is not installed</div><div ng-if=vm.chart><canvas id=pie class=\\\"chart chart-pie\\\" chart-legend=true chart-data=vm.chart.data chart-labels=vm.chart.labels chart-options=vm.chart.options></canvas></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/commits/view.html\",\"<div><div ng-if=!config.repository class=\\\"alert alert-info\\\">Please configure a repository</div><div ng-if=\\\"vm.repository.status == 404 || vm.repository.status == 500\\\" class=\\\"alert alert-danger\\\"><b>Error {{vm.repository.status}}</b> the endpoint could not be reached, this could mean that the selected repository does not exist</div><div ng-if=config.repository><ul class=media-list><li class=media ng-repeat=\\\"commit in vm.commits\\\"><div ng-if=vm.gravatarHash(commit) class=media-left><img class=\\\"media-object img-thumbnail\\\" ng-src=\\\"https://www.gravatar.com/avatar/{{vm.gravatarHash(commit)}}?s=64&d=identicon\\\"></div><div class=media-body><p ng-bind-html=commit.description></p><small>{{commit.author.name}}, {{commit.date | date: \\'yyyy-MM-dd HH:mm\\'}}</small></div></li></ul></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/edit/edit.html\",\"<form role=form><div class=form-group><label for=repository>Repository</label><select name=repository id=repository class=form-control ng-model=config.repository><option ng-repeat=\\\"repository in vm.repositories | orderBy: \\'name\\'\\\" value={{repository.id}}>{{repository.name}}</option></select></div></form>\");\n$templateCache.put(\"{widgetsPath}/scm/src/markdownPreview/edit.html\",\"<form role=form><div class=form-group><p><label for=repository>Repository</label><select name=repository id=repository class=form-control ng-model=config.repository ng-init=vm.getBranchesByRepositoryId(config.repository) ng-change=vm.getBranchesByRepositoryId(config.repository)><option ng-repeat=\\\"repository in vm.repositories | orderBy: \\'name\\'\\\" value={{repository.id}}>{{repository.name}}</option></select></p><p ng-if=vm.branches><label for=branch>Branch</label><select name=branch id=branch class=form-control ng-model=config.branch><option ng-repeat=\\\"branch in vm.branches| orderBy: \\'name\\'\\\" value={{branch.id}}>{{branch.name}}</option></select></p><label for=path>Path to Markdown File</label> <input type=text class=form-control id=path ng-model=config.path></div></form>\");\n$templateCache.put(\"{widgetsPath}/scm/src/markdownPreview/view.html\",\"<style>\\n  div.markdownContent{\\n    overflow: auto;\\n    width: 100%;\\n  }\\n</style><div class=\\\"alert alert-info\\\" ng-if=!vm.fileContent>Please configure a specific file</div><div ng-if=vm.fileContent btf-markdown=vm.fileContent class=markdownContent></div><div class=\\\"alert alert-danger\\\" ng-if=\\\"vm.fileContent.status == 500 || vm.fileContent.status == 404\\\"><b>Error {{vm.fileContent.status}}</b> Markdown-File not found. Please check your configuration and try again.</div>\");}]);\n\n\nangular.module('adf.widget.scm')\n  .controller('MarkdownPreviewEditController', function (repositories, SCM) {\n    var vm = this;\n    vm.repositories = repositories;\n\n    vm.getBranchesByRepositoryId = function (repositoryId) {\n      if (repositoryId) {\n        SCM.getBranchesByRepositoryId(repositoryId).then(function (result) {\n          // catch repositories without branch support\n          if (result.status == 400)  {\n            vm.branches = null;\n          }else{\n            vm.branches = result.branch;\n          }\n        });\n      }\n    };\n\n  });\n\n\n\nangular.module('adf.widget.scm')\n  .controller('MarkdownPreviewController', function (repository, fileContent) {\n    var vm = this;\n    vm.repository = repository;\n    vm.fileContent = fileContent;\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('ScmEditController', function(repositories){\n    var vm = this;\n\n    vm.repositories = repositories;\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n        .controller('CommitsController', function ($sce, config, repository, commits, SCM) {\n            var vm = this;\n\n            vm.repository = repository;\n\n            // allow html descriptions\n            angular.forEach(commits, function (commit) {\n                commit.description = $sce.trustAsHtml(commit.description);\n            });\n            vm.commits = commits;\n\n            vm.gravatarHash = function (commit) {\n                return SCM.getGravatarHash(commit.properties);\n            };\n        });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('LastCommitsController', function ($filter, config, repository, commits) {\n    var vm = this;\n    vm.repository = repository;\n\n    if (repository && commits) {\n      vm.chart = createChart();\n    }\n\n    function createChart() {\n      var options = {\n        scales: {\n          yAxes: [\n            {\n              id: 'y-axis-1',\n              display: true,\n              position: 'left',\n              ticks: {fixedStepSize: 1},\n              scaleLabel: {\n                display: true,\n                labelString: 'Commits'\n              }\n            }\n          ]\n        },\n        legend: {\n          display: true,\n          position: \"bottom\"\n        },\n        responsive: true\n      };\n      var chartData = [];\n      var chart = {\n        labels: [],\n        data: [chartData],\n        series: [\"Commits\"],\n        class: \"chart-line\",\n        options: options\n      };\n\n      var data = {};\n      angular.forEach(commits, function (commit) {\n        var date = new Date(commit.date);\n        var key = date.getUTCFullYear() + '-' + (date.getUTCMonth() + 1) + '-' + date.getUTCDate();\n        var entry = data[key];\n        if (entry) {\n          entry.count += 1;\n        } else {\n          data[key] = {\n            date: key,\n            count: 1\n          };\n        }\n      });\n\n      angular.forEach(data, function (entry) {\n        chart.labels.push(entry.date);\n        chartData.push(entry.count);\n      });\n\n      chart.labels.reverse();\n      chartData.reverse();\n\n      return chart;\n    }\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByMonthController', function (config, repository, commitsByMonth) {\n    var vm = this;\n    vm.repository = repository;\n\n    if (commitsByMonth) {\n      vm.chart = createChart();\n    }\n\n    function createChart() {\n      var chartData = [];\n      var options = {\n        scales: {\n          yAxes: [\n            {\n              id: 'y-axis-1',\n              display: true,\n              position: 'left',\n              ticks: {fixedStepSize: 1},\n              scaleLabel: {\n                display: true,\n                labelString: 'Commits'\n              }\n            }\n          ]\n        },\n        legend: {\n          display: true,\n          position: \"bottom\"\n        },\n        responsive: true\n      };\n      var chart = {\n        labels: [],\n        data: [chartData],\n        series: [\"Commits\"],\n        class: \"chart-line\",\n        options: options\n      };\n\n      angular.forEach(commitsByMonth.month, function (month) {\n        chart.labels.push(month.value);\n        chartData.push(month.count);\n      });\n\n      return chart;\n    }\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByAuthorController', function (config, repository, commitsByAuthor) {\n    var vm = this;\n    vm.repository = repository;\n\n    if (repository && commitsByAuthor) {\n      vm.chart = createChart();\n    }\n\n    function createChart() {\n      var data = {};\n\n      angular.forEach(commitsByAuthor.author, function (entry) {\n        var author = entry.value;\n        data[author] = entry.count;\n      });\n\n      var options = {\n        legend: {\n          display: true,\n          position: \"bottom\"\n        },\n        responsive: true\n      };\n\n      var chart = {\n        labels: [],\n        data: [],\n        series: [\"Commits\"],\n        class: \"chart-pie\",\n        options: options\n      };\n\n      angular.forEach(data, function (count, author) {\n        chart.labels.push(author);\n        chart.data.push(count);\n      });\n\n      return chart;\n    }\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n        .controller('ActivitiesController', function ($sce, activities, SCM) {\n            var vm = this;\n            vm.status = activities.status;\n\n            // allow html descriptions\n            angular.forEach(activities.activities, function (activity) {\n                activity.changeset.description = $sce.trustAsHtml(activity.changeset.description);\n                activity.repoName = activity[\"repository-name\"];\n            });\n\n            // handling and displaying only 15 activities\n            if (activities.activities) {\n                vm.activities = activities.activities.slice(0, 15);\n            }\n\n            vm.gravatarHash = function (activity) {\n                return SCM.getGravatarHash(activity.changeset.properties);\n            };\n        });\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .factory('SCM', function (scmEndpoint, $http) {\n\n    function request(url) {\n      return $http.get(scmEndpoint + url).then(function (response) {\n        if (response.status == 200) {\n          return response.data;\n        }\n      }, function (error) {\n        return error;\n      });\n    }\n\n    function getRepositories() {\n      return request('repositories.json');\n    }\n\n    function getRepository(id) {\n      return request('repositories/' + id + '.json');\n    }\n\n    function getCommitsByAuthor(id) {\n      return request('plugins/statistic/' + id + '/commits-per-author.json');\n    }\n\n    function getCommitsByMonth(id) {\n      return request('plugins/statistic/' + id + '/commits-per-month.json');\n    }\n\n    function getCommits(id, limit) {\n      return request('repositories/' + id + '/changesets.json?limit=' + limit).then(function (data) {\n        return data.changesets;\n      });\n    }\n\n\n    function getActivities(){\n      return request('activity.json');\n  }\n\n    function getFileContent(id, filePath) {\n      return request('repositories/' + id + '/content?path=' + filePath);\n    }\n\n    function getBranchesByRepositoryId(id) {\n      return request('repositories/' + id + '/branches');\n    }\n\n    function getGravatarHash(properties) {\n        var hash;\n      if (properties){\n        for (var i=0; i<properties.length; i++){\n          if (properties[0].key === 'gravatar-hash'){\n               hash = properties[0].value;\n            break;\n          }\n        }\n      }\n      return hash;\n    }\n    \n    return {\n      getRepositories: getRepositories,\n      getRepository: getRepository,\n      getCommitsByAuthor: getCommitsByAuthor,\n      getCommitsByMonth: getCommitsByMonth,\n      getCommits: getCommits,\n      getActivities: getActivities,\n      getFileContent: getFileContent,\n      getBranchesByRepositoryId: getBranchesByRepositoryId,\n      getGravatarHash: getGravatarHash\n    };\n  });\n})(window);"]}